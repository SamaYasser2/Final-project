{"ast":null,"code":"\n//  import React, { useState } from 'react';\n\n// export default function Calendar() {\n\n//     const Calendar = () => {\n//       const [selectedDate, setSelectedDate] = useState(new Date());\n\n//       const daysInMonth = (month, year) => {\n//         return new Date(year, month + 1, 0).getDate();\n//       };\n\n//       const getMonthData = (year, month) => {\n//         const firstDayOfMonth = new Date(year, month, 1).getDay();\n//         const totalDays = daysInMonth(month, year);\n//         const prevMonthDays = daysInMonth(month - 1, year);\n//         const monthData = [];\n\n//         let day = 1;\n\n//         // Previous month days\n//         for (let i = firstDayOfMonth - 1; i >= 0; i--) {\n//           monthData.push({ day: prevMonthDays - i, month: month - 1, year: year, currentMonth: false });\n//         }\n\n//         // Current month days\n//         for (let i = 1; i <= totalDays; i++) {\n//           monthData.push({ day: i, month: month, year: year, currentMonth: true });\n//         }\n\n//         return monthData;\n//       };\n\n//       const handleDateClick = (day, month, year) => {\n//         setSelectedDate(new Date(year, month, day));\n//       };\n\n//       const renderMonth = () => {\n//         const year = selectedDate.getFullYear();\n//         const month = selectedDate.getMonth();\n\n//         const monthData = getMonthData(year, month);\n\n//         return monthData.map((data, index) => (\n//           <div key={index} onClick={() => handleDateClick(data.day, data.month, data.year)}>\n//             {data.currentMonth ? (\n//               <span>{data.day}</span>\n//             ) : (\n//               <span style={{ color: 'gray' }}>{data.day}</span>\n//             )}\n//           </div>\n//         ));\n//       };\n\n//       return (\n//         <div>\n//           <div>\n//             <h2>{selectedDate.toLocaleString('default', { month: 'long' })} {selectedDate.getFullYear()}</h2>\n//           </div>\n//           <div>\n//             <div>Sun</div>\n//             <div>Mon</div>\n//             <div>Tue</div>\n//             <div>Wed</div>\n//             <div>Thu</div>\n//             <div>Fri</div>\n//             <div>Sat</div>\n//           </div>\n//           <div>{renderMonth()}</div>\n//         </div>\n//       );\n//     };\n\n// }","map":{"version":3,"names":[],"sources":["C:/Users/asus/Desktop/AL-QALAM FINAL/al-qalam/src/Components/Calendar/Calendar.jsx"],"sourcesContent":["\r\n//  import React, { useState } from 'react';\r\n\r\n// export default function Calendar() {\r\n\r\n\r\n   \r\n\r\n//     const Calendar = () => {\r\n//       const [selectedDate, setSelectedDate] = useState(new Date());\r\n    \r\n//       const daysInMonth = (month, year) => {\r\n//         return new Date(year, month + 1, 0).getDate();\r\n//       };\r\n    \r\n//       const getMonthData = (year, month) => {\r\n//         const firstDayOfMonth = new Date(year, month, 1).getDay();\r\n//         const totalDays = daysInMonth(month, year);\r\n//         const prevMonthDays = daysInMonth(month - 1, year);\r\n//         const monthData = [];\r\n    \r\n//         let day = 1;\r\n    \r\n//         // Previous month days\r\n//         for (let i = firstDayOfMonth - 1; i >= 0; i--) {\r\n//           monthData.push({ day: prevMonthDays - i, month: month - 1, year: year, currentMonth: false });\r\n//         }\r\n    \r\n//         // Current month days\r\n//         for (let i = 1; i <= totalDays; i++) {\r\n//           monthData.push({ day: i, month: month, year: year, currentMonth: true });\r\n//         }\r\n    \r\n//         return monthData;\r\n//       };\r\n    \r\n//       const handleDateClick = (day, month, year) => {\r\n//         setSelectedDate(new Date(year, month, day));\r\n//       };\r\n    \r\n//       const renderMonth = () => {\r\n//         const year = selectedDate.getFullYear();\r\n//         const month = selectedDate.getMonth();\r\n    \r\n//         const monthData = getMonthData(year, month);\r\n    \r\n//         return monthData.map((data, index) => (\r\n//           <div key={index} onClick={() => handleDateClick(data.day, data.month, data.year)}>\r\n//             {data.currentMonth ? (\r\n//               <span>{data.day}</span>\r\n//             ) : (\r\n//               <span style={{ color: 'gray' }}>{data.day}</span>\r\n//             )}\r\n//           </div>\r\n//         ));\r\n//       };\r\n    \r\n//       return (\r\n//         <div>\r\n//           <div>\r\n//             <h2>{selectedDate.toLocaleString('default', { month: 'long' })} {selectedDate.getFullYear()}</h2>\r\n//           </div>\r\n//           <div>\r\n//             <div>Sun</div>\r\n//             <div>Mon</div>\r\n//             <div>Tue</div>\r\n//             <div>Wed</div>\r\n//             <div>Thu</div>\r\n//             <div>Fri</div>\r\n//             <div>Sat</div>\r\n//           </div>\r\n//           <div>{renderMonth()}</div>\r\n//         </div>\r\n//       );\r\n//     };\r\n    \r\n// }\r\n\r\n"],"mappings":";AACA;;AAEA;;AAKA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}